{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Todo","props","useState","open","setOpen","input","setInput","Modal","onClose","closeAfterTransition","Fade","in","Box","sx","Typography","id","variant","component","mt","placeholder","todo","value","onChange","event","target","onClick","collection","doc","set","merge","List","className","ListItem","ListItemText","primary","secondary","e","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","Button","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc29a03e.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n        apiKey: \"AIzaSyBrAoRpNoBOOYGjXuMNx5O9LFyX7wPf_10\",\r\n        authDomain: \"pendientes-app-bcb8c.firebaseapp.com\",\r\n        projectId: \"pendientes-app-bcb8c\",\r\n        storageBucket: \"pendientes-app-bcb8c.appspot.com\",\r\n        messagingSenderId: \"368948766773\",\r\n        appId: \"1:368948766773:web:a7d191862c280b2d49e97c\",\r\n        measurementId: \"G-XY2DHN2TYN\"\r\n});\r\n\r\nconst db=firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport \"./Todo.css\";\r\nimport { Button } from '@mui/material';\r\nimport db from \"./firebase\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Fade from '@mui/material/Fade';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nfunction Todo(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [input, setInput] = useState();\r\n\r\n    const updateTodo =()=>{\r\n        db.collection(\"todos\").doc(props.todo.id).set({\r\n            todo: input\r\n        }, {merge:true})\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <> \r\n            <Modal \r\n                open={open} \r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={open}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            <h1>Modificación</h1>\r\n                        </Typography>\r\n                        <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\r\n                            <input placeholder={props.todo.todo} value={input} onChange={event=> setInput(event.target.value)}></input>\r\n                            <button onClick={updateTodo}>Actualizar</button>\r\n                        </Typography>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <List className=\"todo_list\">\r\n                <ListItem>\r\n                    <ListItemText primary=\"↪️\" secondary={props.todo.todo}>\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <button onClick={e=>setOpen(true)}>Editar</button>\r\n                <DeleteIcon onClick={event => \r\n                    db.collection(\"todos\").doc(props.todo.id).delete()}>\r\n                </DeleteIcon>\r\n            </List>\r\n        </>\r\n        //React Fragment\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import Button from '@mui/material/Button';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport React, { useEffect, useState} from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport './App.css';\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\n\r\n\r\nfunction App() {\r\n  const [todos, setTodos]= useState([]);\r\n  const [input, setInput]= useState(\"\");\r\n  // console.log(input);\r\n\r\n  //Fetch de Firebase cuando inicia APP\r\n  useEffect(()=>{\r\n    db.collection(\"todos\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot => {\r\n      setTodos(snapshot.docs.map(doc => ({id: doc.id ,todo: doc.data().todo})))\r\n      })\r\n  }, []);\r\n\r\n  const addTodo = (event) => {\r\n    //Agregar tarea\r\n    event.preventDefault();\r\n\r\n    db.collection(\"todos\").add({\r\n      todo: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n    setTodos([...todos,input]);\r\n    setInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>TAREAS 📚</h1>\r\n\r\n      <form>\r\n        <FormControl>\r\n            <InputLabel>NUEVA TAREA 📗  </InputLabel>\r\n            <Input value={input} onChange={event => setInput(event.target.value)}/>\r\n        </FormControl>  \r\n\r\n            <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"success\">\r\n              AGREGAR\r\n            </Button>\r\n      </form>\r\n\r\n\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <Todo todo={todo}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}